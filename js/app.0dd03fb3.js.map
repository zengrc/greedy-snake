{"version":3,"file":"js/app.0dd03fb3.js","mappings":"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","sources":["webpack://greedy-snake/./src/snake/shaders.ts","webpack://greedy-snake/./src/snake/utils.ts","webpack://greedy-snake/./src/snake/Texture.ts","webpack://greedy-snake/./src/snake/Game.ts","webpack://greedy-snake/./src/snake/Point.ts","webpack://greedy-snake/./src/snake/Map.ts","webpack://greedy-snake/./src/snake/Snake.ts","webpack://greedy-snake/./src/snake/Cube.ts","webpack://greedy-snake/./src/snake/Food.ts","webpack://greedy-snake/./src/App.vue?cb76","webpack://greedy-snake/./src/App.vue","webpack://greedy-snake/./src/main.ts","webpack://greedy-snake/webpack/bootstrap","webpack://greedy-snake/webpack/runtime/chunk loaded","webpack://greedy-snake/webpack/runtime/compat get default export","webpack://greedy-snake/webpack/runtime/define property getters","webpack://greedy-snake/webpack/runtime/global","webpack://greedy-snake/webpack/runtime/hasOwnProperty shorthand","webpack://greedy-snake/webpack/runtime/publicPath","webpack://greedy-snake/webpack/runtime/jsonp chunk loading","webpack://greedy-snake/webpack/startup"],"sourcesContent":["export const pointVertSrc = `\n  attribute vec2 a_position;\n  attribute vec4 a_color;\n  attribute float a_size;\n  varying vec4 v_color;\n  uniform mat4 u_projection;\n  void main(void) {\n    gl_Position = u_projection * vec4(a_position, 0, 1.0);\n    gl_PointSize = 1.0 * a_size;\n    v_color = a_color;\n  }\n`;\n\nexport const pointFrgSrc = `\n  precision mediump float;\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n`;\n\nexport const textureVertSrc = `\n  attribute vec2 a_position;\n  attribute float a_textureIndex;\n  varying float v_textureIndex;\n  attribute vec2 a_texCoord;\n  varying vec2 v_texCoord;\n  uniform mat4 u_projection;\n  void main() {\n    gl_Position = u_projection * vec4(a_position, 0, 1.0);\n    v_textureIndex = a_textureIndex;\n    v_texCoord = a_texCoord; \n  }\n`;\n\nexport const textureFrgSrc = `\n  #define numTextures 8\n  precision mediump float;\n  varying float v_textureIndex;\n  varying vec2 v_texCoord;\n  uniform sampler2D u_textures[numTextures];\n      \n  vec4 getSampleFromArray(sampler2D textures[8], int ndx, vec2 uv) {\n    vec4 color = vec4(uv, 0, 1);\n    for (int i = 0; i < numTextures; ++i) {\n      if (i == ndx) {\n        color = texture2D(u_textures[i], uv);\n      }\n    }\n    return color;\n  }\n      \n  void main() {\n    gl_FragColor = getSampleFromArray(u_textures, int(v_textureIndex + 0.5), v_texCoord);\n  }\n`;\n","/* eslint-disable max-params */\nexport const createShader = (gl: WebGLRenderingContext, type: number, source: string) => {\n  const shader = gl.createShader(type);\n  if (!shader) return;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error('a error occured compiling shader', gl.getShaderInfoLog(shader));\n    return;\n  }\n\n  return shader;\n};\n\nexport const createProgram = (gl: WebGLRenderingContext, shaders: WebGLShader[]) => {\n  const program = gl.createProgram();\n  if (!program) return null;\n  shaders.forEach((shader) => gl.attachShader(program, shader));\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error('a error occured linking program ', gl.getProgramInfoLog(program));\n    return null;\n  }\n\n  gl.useProgram(program);\n  return program;\n};\n\nexport const setAttribute = (\n  gl: WebGLRenderingContext,\n  program: WebGLProgram,\n  data: number[],\n  attribute: string,\n  dataSize = 2,\n  type?: number,\n  isInt?: boolean,\n) => {\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, isInt ? new Uint8Array(data) : new Float32Array(data), type || gl.STATIC_DRAW);\n  // 获取顶点属性的在着色器中的索引，并激活它\n  const aVertexPositionLocation = gl.getAttribLocation(program, attribute);\n  gl.enableVertexAttribArray(aVertexPositionLocation);\n  // 设置顶点属性如何从顶点缓冲对象中取值。每次从数组缓冲对象中读取2个值\n  gl.vertexAttribPointer(aVertexPositionLocation, dataSize, isInt ? gl.UNSIGNED_BYTE : gl.FLOAT, false, 0, 0);\n};\n\nexport const setUniformMat = (\n  gl: WebGLRenderingContext,\n  program: WebGLProgram,\n  mat: number[],\n  uniform: string,\n) => {\n  const uLocation = gl.getUniformLocation(program, uniform);\n  gl.uniformMatrix4fv(uLocation, false, mat);\n};\n\nexport const createProjectionMat = (left: number, right: number, top: number, bottom: number) => {\n  // 坐标变换矩阵\n  return [\n    2 / (right - left),\n    0,\n    0,\n    0,\n    0,\n    2 / (top - bottom),\n    0,\n    0,\n    0,\n    0,\n    2,\n    0,\n    -(right + left) / (right - left),\n    -(top + bottom) / (top - bottom),\n    -1,\n    1,\n  ];\n};\n\nexport const createScaleMat = (scale: number | number[]): number[] => {\n  // 缩放矩阵\n  if (typeof scale === 'object') {\n    const [scaleX, scaleY] = scale;\n    return [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  }\n  return [scale, 0, 0, 0, 0, scale, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\nexport const createRotateMat = (rotate: number) => {\n  // 旋转矩阵\n  rotate = (rotate * Math.PI) / 180;\n  const cos = Math.cos(rotate);\n  const sin = Math.sin(rotate);\n  return [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\nexport const createTranslateMat = (tx: number, ty: number) => {\n  // 平移矩阵\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1];\n};\n","export interface TextureConfig {\n  link: string,\n  img: HTMLImageElement,\n  textureID: number,\n  texture?: WebGLTexture | null\n}\n\nexport default class Texture {\n  private textureMap: Record<string, TextureConfig> = {}\n  private gl: WebGLRenderingContext | null = null\n\n  constructor(gl: WebGLRenderingContext | null) {\n    this.gl = gl;\n  }\n\n  getTexture(name: string) {\n    return this.textureMap[name];\n  }\n\n  generateWebglTexture(textureConfig: TextureConfig) {\n    if (!this.gl) return null;\n    this.gl.activeTexture(this.gl.TEXTURE0 + textureConfig.textureID);\n    const texture = this.gl.createTexture();\n    if (!texture) return null;\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, textureConfig.img);\n\n    return texture;\n  }\n\n  createTexture(name: string, link: string) {\n    if (this.textureMap[name]) return;\n    this.textureMap[name] = {\n      link,\n      img: new Image(),\n      textureID: Object.keys(this.textureMap).length\n    }\n    return new Promise(resolve => {\n      this.textureMap[name].img.onload = () => {\n        const texture = this.generateWebglTexture(this.textureMap[name]);\n        this.textureMap[name].texture = texture;\n        resolve(this.textureMap[name]);\n      }\n      this.textureMap[name].img.src = link;\n    })\n  }\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { pointVertSrc, pointFrgSrc, textureFrgSrc, textureVertSrc } from './shaders';\nimport { createProgram, createShader, createProjectionMat, setUniformMat, setAttribute } from './utils'\nimport Texture from './Texture';\n\nexport class GameItem {\n  private type: 'point' | 'cube'\n  x: number\n  y: number\n  width: number\n  height: number\n  texture?: string\n  rotate?: number\n  scale = 1\n  translateX = 0\n  translateY = 0\n  red = 0.5\n  blue = 0.5\n  green = 0.5\n  alpha = 1\n\n  constructor(type: 'point' | 'cube', x = 0, y = 0, width = 0, height = 0) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  isPoint() {\n    return this.type === 'point';\n  }\n\n  isTexture() {\n    return this.type === 'cube' && !!this.texture;\n  }\n}\n\nexport abstract class GameObject {\n  abstract items: GameItem[]\n}\n\nexport default class Game {\n  canvas: HTMLCanvasElement\n  width = 0\n  height = 0\n  container: HTMLElement | null = null\n  gl: WebGLRenderingContext | null = null\n  gameObjects: GameObject[] = []\n  pointProgram: WebGLProgram | null = null\n  textureProgram: WebGLProgram | null = null\n  projectionMat: number[] = [];\n  texture: Texture;\n\n  constructor(root: HTMLElement | string) {\n    if (typeof root === 'string') {\n      this.container = document.querySelector(root);\n    } else {\n      this.container = root;\n    }\n\n    this.canvas = document.createElement('canvas');\n    this.gl = this.canvas.getContext('webgl');\n    this.texture = new Texture(this.gl);\n\n    if (!this.gl) return;\n\n    if (this.container) {\n      this.container.appendChild(this.canvas);\n      this.canvas.width = this.container.clientWidth;\n      this.canvas.height = this.container.clientHeight;\n      this.canvas.style.width = '100%';\n      this.canvas.style.height = '100%';\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.projectionMat = createProjectionMat(0, this.canvas.width, 0, this.canvas.height);\n      this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }\n\n  private clearCanvas() {\n    if (!this.gl) return;\n    this.gl.clearColor(0, 0, 0, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  private switchPointProgram() {\n    if (!this.gl) return;\n    if (!this.pointProgram) {\n      const vertexShader = createShader(this.gl, this.gl.VERTEX_SHADER, pointVertSrc);\n      const frgShader = createShader(this.gl, this.gl.FRAGMENT_SHADER, pointFrgSrc);\n      if (!vertexShader || !frgShader) return;\n      this.pointProgram = createProgram(this.gl, [vertexShader, frgShader]);\n      if (!this.pointProgram) return;\n      setUniformMat(this.gl, this.pointProgram, this.projectionMat, 'u_projection');\n    }\n    if (!this.pointProgram) return;\n    this.gl.useProgram(this.pointProgram);\n  }\n\n  private switchTextureProgram() {\n    if (!this.gl) return;\n    if (!this.textureProgram) {\n      const vertexShader = createShader(this.gl, this.gl.VERTEX_SHADER, textureVertSrc);\n      const frgShader = createShader(this.gl, this.gl.FRAGMENT_SHADER, textureFrgSrc);\n      if (!vertexShader || !frgShader) return;\n      this.textureProgram = createProgram(this.gl, [vertexShader, frgShader]);\n      if (!this.textureProgram) return;\n      setUniformMat(this.gl, this.textureProgram, this.projectionMat, 'u_projection');\n      const textureLoc = this.gl.getUniformLocation(this.textureProgram, \"u_textures\");\n      this.gl.uniform1iv(textureLoc, [0, 1, 2, 3, 4]);\n    }\n    if (!this.textureProgram) return;\n    this.gl.useProgram(this.textureProgram);\n  }\n\n  private getPos(item: GameItem) {\n    if (item.isPoint()) {\n      // point shader没有translate mat 直接反应在pos上\n      return [item.x + item.translateX, item.y + item.translateY];\n    } else if (item.isTexture()) {\n      // 简单操作，理论上平移应该用矩阵实现\n      const centerX = item.x + item.translateX;\n      const centerY = item.y + item.translateY;\n      const left = centerX - item.width / 2;\n      const right = centerX + item.width / 2;\n      const top = centerY - item.height / 2;\n      const down = centerY + item.height / 2;\n      return [\n        left, top, right, top, left, down,\n        left, down, right, down, right, top\n      ];\n    }\n    return [item.x, item.y];\n  }\n\n  private drawPoints(points: GameItem[]) {\n    if (!this.gl) return;\n    this.switchPointProgram();\n    if (!this.pointProgram) return;\n\n    const pointPos: number[] = [];\n    const pointColor: number[] = [];\n    const pointSize: number[] = [];\n\n    points.forEach(point => {\n      pointPos.splice(pointPos.length, 0, ...this.getPos(point));\n      pointColor.splice(pointColor.length, 0, point.red, point.green, point.blue, point.alpha);\n      pointSize.push(point.scale);\n    })\n\n    setAttribute(this.gl!, this.pointProgram!, pointPos, 'a_position');\n    setAttribute(this.gl!, this.pointProgram!, pointSize, 'a_size', 1);\n    setAttribute(this.gl!, this.pointProgram!, pointColor, 'a_color', 4);\n\n    this.gl.drawArrays(this.gl.POINTS, 0, points.length)\n  }\n\n  private drawTexture(cubes: GameItem[]) {\n    if (!this.gl) return;\n    this.switchTextureProgram();\n    if (!this.textureProgram) return;\n\n    const pointPos: number[] = [];\n    const textureIdx: number[] = [];\n    const coorPos: number[] = [];\n\n    cubes.forEach(cube => {\n      pointPos.splice(pointPos.length, 0, ...this.getPos(cube));\n      // 两个三角形 六个点\n      const textureConfig = this.texture.getTexture(cube.texture!);\n      textureIdx.push(textureConfig.textureID);\n      textureIdx.push(textureConfig.textureID);\n      textureIdx.push(textureConfig.textureID);\n      textureIdx.push(textureConfig.textureID);\n      textureIdx.push(textureConfig.textureID);\n      textureIdx.push(textureConfig.textureID);\n\n      coorPos.splice(coorPos.length, 0, ...[0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0])\n    })\n\n    setAttribute(this.gl, this.textureProgram, pointPos, 'a_position');\n    setAttribute(this.gl, this.textureProgram, textureIdx, 'a_textureIndex', 1, this.gl.STATIC_DRAW, true);\n    setAttribute(this.gl, this.textureProgram, coorPos, 'a_texCoord');\n\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, cubes.length * 2 * 3);\n  }\n\n  init() {\n    this.clearCanvas();\n  }\n\n  render() {\n    this.clearCanvas();\n    this.gameObjects.forEach(obj => {\n      const pointArr: GameItem[] = [];\n      const textureArr: GameItem[] = [];\n      obj.items.forEach(i => {\n        if (i.isPoint()) pointArr.push(i);\n        else if (i.isTexture()) textureArr.push(i);\n      });\n      if (pointArr.length) this.drawPoints(pointArr);\n      if (textureArr.length) this.drawTexture(textureArr);\n    })\n  }\n\n  createPoint(x: number, y: number): GameItem {\n    const item = new GameItem('point', x, y);\n    return item;\n  }\n\n  addItem(item: GameObject | GameObject[]) {\n    if (item instanceof Array) {\n      item.forEach(i => this.gameObjects.push(i));\n    } else {\n      this.gameObjects.push(item);\n    }\n  }\n\n  removeItem(item: GameObject | GameObject[]) {\n    const newList: GameObject[] = [];\n    const items = item instanceof Array ? item : [item];\n    this.gameObjects.forEach(i => {\n      const index = items.indexOf(i);\n      if (index === -1) newList.push(i);\n    })\n    this.gameObjects = newList;\n  }\n}","import Game, { GameItem } from './Game';\nimport Map, { CELL_TYPE } from './Map';\n\nexport default class Point extends GameItem {\n  red = 0.5;\n  green = 0.5;\n  blue = 0.5;\n  static CellSize = 20;\n  scale = 2;\n  rowIdx: number;\n  colIdx: number;\n  game: Game;\n  map: Map;\n\n  get cellType() {\n    return this.map.getCellType(this.rowIdx, this.colIdx);\n  }\n\n  constructor(game: Game, map: Map, rowIdx: number, colIdx: number, type = CELL_TYPE.EMPTY) {\n    super('point', Point.CellSize * colIdx + Point.CellSize / 2, Point.CellSize * rowIdx + Point.CellSize / 2);\n    this.rowIdx = rowIdx;\n    this.colIdx = colIdx;\n    this.game = game;\n    this.map = map;\n    this.map.updateCellType(this.rowIdx, this.colIdx, type);\n  }\n\n  updatePoint(point: Point) {\n    this.scale = point.scale;\n    this.colIdx = point.colIdx;\n    this.rowIdx = point.rowIdx;\n    this.x = point.x;\n    this.y = point.y;\n    this.translateX = point.translateX;\n    this.translateY = point.translateY;\n    this.texture = point.texture;\n  }\n}","import Game, { GameObject } from './Game';\nimport Point from './Point';\n\nexport enum CELL_TYPE {\n  SNAKE = 1,\n  FOOD = 2,\n  EMPTY = 0,\n}\n\nexport default class Map extends GameObject {\n  items: Point[] = [];\n  col: number;\n  row: number;\n  private cellTypeMap: Record<string, CELL_TYPE> = {};\n  keyDownCallback: (e: KeyboardEvent) => void = () => { /**/ };\n\n  get emptyCells() {\n    return Object.keys(this.cellTypeMap).filter(key => !this.cellTypeMap[key]).map(key => key.split(','));\n  }\n\n  constructor(game: Game) {\n    super();\n    this.col = Math.floor(game.width / Point.CellSize);\n    this.row = Math.floor(game.height / Point.CellSize);\n    for (let i = 0; i < this.row; i += 1) {\n      for (let j = 0; j < this.col; j += 1) {\n        this.items.push(new Point(game, this, i, j));\n      }\n    }\n  }\n\n  removeListeners() {\n    document.body.removeEventListener('keydown', this.keyDownCallback.bind(this));\n  }\n\n  registerListeners(cb: (e: KeyboardEvent) => void) {\n    this.removeListeners();\n    this.keyDownCallback = cb;\n    document.body.addEventListener('keydown', this.keyDownCallback.bind(this))\n  }\n\n  hasEmptyCell() {\n    return this.emptyCells.length < this.row * this.col;\n  }\n\n  updateCellType(rowIdx: number, colIdx: number, type: CELL_TYPE) {\n    this.cellTypeMap[`${rowIdx},${colIdx}`] = type;\n  }\n\n  getCellType(rowIdx: number, colIdx: number) {\n    return this.cellTypeMap[`${rowIdx},${colIdx}`] || CELL_TYPE.EMPTY;\n  }\n}","import Game, { GameObject } from './Game';\nimport Map, { CELL_TYPE } from './Map';\nimport Foods from './Food';\n\nimport Cube from './Cube';\n\nexport enum DIRECTION {\n  LEFT = -1,\n  RIGHT = 1,\n  UP = -2,\n  DOWN = 2,\n}\n\nclass SnakePoint extends Cube {\n  constructor(game: Game, map: Map, rowIdx: number, colIdx: number) {\n    super(game, map, rowIdx, colIdx, CELL_TYPE.SNAKE, 'logo');\n  }\n}\n\nexport default class Snake extends GameObject {\n  items: SnakePoint[] = [];\n  map: Map;\n  game: Game;\n  foods: Foods;\n  onGameOver = () => { /* */ }\n  private direction: DIRECTION = DIRECTION.RIGHT;\n  private _direction: DIRECTION = DIRECTION.RIGHT;\n\n  constructor(game: Game, map: Map, foods: Foods) {\n    super();\n    this.items = [\n      new SnakePoint(game, map, 2, 1),\n      new SnakePoint(game, map, 2, 2),\n      new SnakePoint(game, map, 2, 3)\n    ];\n    this.map = map;\n    this.game = game;\n    this.foods = foods;\n  }\n\n  changeDirection(direction: DIRECTION) {\n    if ((direction + this._direction) === 0) return; // 不能调转方向\n    this.direction = direction;\n  }\n\n  private snakeMove(rowIdx: number, colIdx: number) {\n    const cellType = this.map.getCellType(rowIdx, colIdx);\n    const newItem = new SnakePoint(this.game, this.map, rowIdx, colIdx);\n    if (cellType === CELL_TYPE.SNAKE) {\n      this.onGameOver();\n      return;\n    }\n    // 每个点往前挪\n    this.map.updateCellType(this.items[0].rowIdx, this.items[0].colIdx, CELL_TYPE.EMPTY);\n    this.items.forEach((item, index) => {\n      const nextIdx = index + 1;\n      if (nextIdx < this.items.length) {\n        item.updatePoint(this.items[nextIdx]);\n      } else {\n        item.updatePoint(newItem);\n      }\n    });\n    this.map.updateCellType(newItem.rowIdx, newItem.colIdx, CELL_TYPE.SNAKE);\n    if (cellType === CELL_TYPE.FOOD) {\n      // 吃到食物变成，队首插一个新元素，颜色和食物相同\n      const foodItem = this.foods.eat(newItem);\n      if (foodItem) {\n        const newTailItem = new SnakePoint(this.game, this.map, foodItem.rowIdx, foodItem.colIdx);\n        // 变色并加到末尾\n        newTailItem.texture = foodItem.texture;\n        this.items.unshift(newTailItem);\n      }\n      return;\n    }\n  }\n\n  private moveRight() {\n    const lastItem = this.items[this.items.length - 1];\n    const newCol = (lastItem.colIdx + 1) % this.map.col;\n    this.snakeMove(lastItem.rowIdx, newCol)\n  }\n\n  private moveLeft() {\n    const lastItem = this.items[this.items.length - 1];\n    const newCol = (lastItem.colIdx - 1 + this.map.col) % this.map.col;\n    this.snakeMove(lastItem.rowIdx, newCol)\n  }\n  \n  private moveUp() {\n    const lastItem = this.items[this.items.length - 1];\n    const newRow = (lastItem.rowIdx - 1 + this.map.row) % this.map.row;\n    this.snakeMove(newRow, lastItem.colIdx)\n  }\n\n  private moveDown() {\n    const lastItem = this.items[this.items.length - 1];\n    const newRow = (lastItem.rowIdx + 1) % this.map.row;\n    this.snakeMove(newRow, lastItem.colIdx)\n  }\n\n  move() {\n    if (!this.items.length) return;\n    // 真正move的时候才更新，防止手速过快的用户点击\n    this._direction = this.direction;\n    switch(this.direction) {\n      case DIRECTION.RIGHT:\n        this.moveRight()\n        break;\n      case DIRECTION.LEFT:\n        this.moveLeft();\n        break;\n      case DIRECTION.UP:\n        this.moveUp();\n        break;\n      case DIRECTION.DOWN:\n        this.moveDown();\n        break;\n      default:\n        break;\n    }\n  }\n}","import Game, { GameItem } from './Game';\nimport Map, { CELL_TYPE } from './Map';\n\nexport default class Cube extends GameItem {\n  red = 0.5;\n  green = 0.5;\n  blue = 0.5;\n  static CellSize = 20;\n  scale = 1;\n  width = 10;\n  height = 10;\n  rowIdx: number;\n  colIdx: number;\n  game: Game;\n  map: Map;\n\n  get cellType() {\n    return this.map.getCellType(this.rowIdx, this.colIdx);\n  }\n\n  constructor(game: Game, map: Map, rowIdx: number, colIdx: number, type = CELL_TYPE.EMPTY, texture = '') {\n    super('cube', Cube.CellSize * colIdx + Cube.CellSize / 2, Cube.CellSize * rowIdx + Cube.CellSize / 2);\n    this.rowIdx = rowIdx;\n    this.colIdx = colIdx;\n    this.game = game;\n    this.map = map;\n    this.map.updateCellType(this.rowIdx, this.colIdx, type);\n    this.texture = texture;\n  }\n\n  updatePoint(cube: Cube) {\n    this.colIdx = cube.colIdx;\n    this.rowIdx = cube.rowIdx;\n    this.x = cube.x;\n    this.y = cube.y;\n    this.translateX = cube.translateX;\n    this.translateY = cube.translateY;\n    this.width = cube.width;\n    this.height = cube.height;\n  }\n}","import Game, { GameObject } from './Game';\nimport Map, { CELL_TYPE } from './Map';\n\nimport Cube from './Cube';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass FoodPoint extends Cube {\n  width = 6;\n  height = 6;\n\n  constructor(game: Game, map: Map, rowIdx: number, colIdx: number) {\n    const foodID = getRandomInt(1, 4);\n\n    super(game, map, rowIdx, colIdx, CELL_TYPE.FOOD, `food${foodID}`);\n  }\n}\n\nexport default class Foods extends GameObject {\n  items: FoodPoint[] = [];\n  map: Map;\n  game: Game;\n  private maxCount = 3;\n\n  constructor(game: Game, map: Map) {\n    super();\n    this.game = game;\n    this.map = map;\n  }\n\n  createFood() {\n    if (this.items.length >= this.maxCount) return;\n    const emptyCells = this.map.emptyCells;\n    if (!emptyCells.length) return;\n    const [newRowIdx, newColIdx] = emptyCells[getRandomInt(0, emptyCells.length - 1)];\n    const newFood = new FoodPoint(this.game, this.map, +newRowIdx, +newColIdx);\n    this.items.push(newFood);\n  }\n\n  eat(point: Cube) {\n    const index = this.items.indexOf(this.items.filter(item => item.rowIdx === point.rowIdx && item.colIdx === point.colIdx)[0]);\n    if (index > -1) {\n      const deleteItem = this.items.splice(index, 1)[0];\n      // 不需要destory snake会把这里的celltype变成snake\n      return deleteItem;\n    }\n  }\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-72c7064e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"playground\" }, null, -1))\n\nimport Game from '@/snake/Game';\nimport Map from '@/snake/Map';\nimport Foods from '@/snake/Food';\nimport Snake, { DIRECTION } from '@/snake/Snake';\nimport { onMounted } from 'vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nlet timer = 0;\nlet render = () => { /* */ }\n\nconst startGame = () => {\n  clearInterval(timer);\n  if (!render) return;\n  timer = setInterval(() => {\n    render();\n  }, 500);\n}\n\nonMounted(async () => {\n  const game = new Game('#playground');\n  await game.texture.createTexture('logo', require('./assets/logo.png'));\n  await game.texture.createTexture('food1', require('./assets/food_1.png'));\n  await game.texture.createTexture('food2', require('./assets/food_2.png'));\n  await game.texture.createTexture('food3', require('./assets/food_3.png'));\n  await game.texture.createTexture('food4', require('./assets/food_4.png'));\n  game.init();\n  const map = new Map(game);\n  map.registerListeners((event) => {\n    const { code } = event;\n    switch(code) {\n      case 'ArrowUp':\n        snake.changeDirection(DIRECTION.UP);\n        break;\n      case 'ArrowRight':\n        snake.changeDirection(DIRECTION.RIGHT);\n        break;\n      case 'ArrowLeft':\n        snake.changeDirection(DIRECTION.LEFT);\n        break;\n      case 'ArrowDown':\n        snake.changeDirection(DIRECTION.DOWN);\n        break;\n    }\n  })\n  const foods = new Foods(game, map);\n  const snake = new Snake(game, map, foods);\n  snake.onGameOver = () => {\n    alert('game over!!')\n    clearInterval(timer);\n  }\n  game.addItem(map);\n  game.addItem(snake);\n  game.addItem(foods);\n  game.render();\n  render = () => {\n    snake.move();\n    foods.createFood();\n    game.render();\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", {\n      class: \"btn\",\n      onClick: startGame\n    }, \" start \"),\n    _hoisted_1\n  ], 64))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./App.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./App.vue?vue&type=style&index=0&id=72c7064e&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-72c7064e\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgreedy_snake\"] = self[\"webpackChunkgreedy_snake\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8241); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["pointVertSrc","pointFrgSrc","textureVertSrc","textureFrgSrc","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","createProgram","shaders","program","forEach","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","setAttribute","data","attribute","dataSize","isInt","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Uint8Array","Float32Array","STATIC_DRAW","aVertexPositionLocation","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","UNSIGNED_BYTE","FLOAT","setUniformMat","mat","uniform","uLocation","getUniformLocation","uniformMatrix4fv","createProjectionMat","left","right","top","bottom","Texture","constructor","_defineProperty","this","getTexture","name","textureMap","generateWebglTexture","textureConfig","activeTexture","TEXTURE0","textureID","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","img","link","Image","Object","keys","length","Promise","resolve","onload","src","GameItem","x","y","width","height","isPoint","isTexture","GameObject","Game","root","container","document","querySelector","canvas","createElement","getContext","appendChild","clientWidth","clientHeight","style","projectionMat","viewport","clearCanvas","clearColor","clear","COLOR_BUFFER_BIT","switchPointProgram","pointProgram","vertexShader","VERTEX_SHADER","frgShader","FRAGMENT_SHADER","switchTextureProgram","textureProgram","textureLoc","uniform1iv","getPos","item","translateX","translateY","centerX","centerY","down","drawPoints","points","pointPos","pointColor","pointSize","point","splice","red","green","blue","alpha","push","scale","drawArrays","POINTS","drawTexture","cubes","textureIdx","coorPos","cube","TRIANGLES","init","render","gameObjects","obj","pointArr","textureArr","items","i","createPoint","addItem","Array","removeItem","newList","index","indexOf","Point","cellType","map","getCellType","rowIdx","colIdx","game","CELL_TYPE","EMPTY","super","CellSize","updateCellType","updatePoint","DIRECTION","Map","emptyCells","cellTypeMap","filter","key","split","col","Math","floor","row","j","removeListeners","body","removeEventListener","keyDownCallback","bind","registerListeners","cb","addEventListener","hasEmptyCell","Cube","getRandomInt","min","max","random","FoodPoint","foodID","FOOD","Foods","createFood","maxCount","newRowIdx","newColIdx","newFood","eat","deleteItem","SnakePoint","SNAKE","Snake","foods","RIGHT","changeDirection","direction","_direction","snakeMove","newItem","nextIdx","foodItem","newTailItem","unshift","onGameOver","moveRight","lastItem","newCol","moveLeft","moveUp","newRow","moveDown","move","LEFT","UP","DOWN","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","id","_defineComponent","__name","setup","__props","timer","startGame","clearInterval","setInterval","onMounted","async","require","event","code","snake","alert","_ctx","_cache","_openBlock","_createElementBlock","_Fragment","class","onClick","__exports__","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}